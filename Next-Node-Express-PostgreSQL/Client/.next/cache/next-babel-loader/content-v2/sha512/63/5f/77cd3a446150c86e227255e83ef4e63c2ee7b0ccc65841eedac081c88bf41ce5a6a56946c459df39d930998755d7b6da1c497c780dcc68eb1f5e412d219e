{"ast":null,"code":"import _regeneratorRuntime from \"E:/\\u039C\\u03B1\\u03B8\\u03AE\\u03BC\\u03B1\\u03C4\\u03B1/7/WEB/project/www/Next-Node-Express-PostgreSQL/Client/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/\\u039C\\u03B1\\u03B8\\u03AE\\u03BC\\u03B1\\u03C4\\u03B1/7/WEB/project/www/Next-Node-Express-PostgreSQL/Client/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { verify } from 'password-hash';\nexport function checkCreds(_x, _x2) {\n  return _checkCreds.apply(this, arguments);\n}\n\nfunction _checkCreds() {\n  _checkCreds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n    var res, match;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://localhost:5000/login/\".concat(username));\n\n          case 2:\n            res = _context.sent;\n            match = verify(password, res);\n            return _context.abrupt(\"return\", creds);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkCreds.apply(this, arguments);\n}","map":{"version":3,"sources":["E:/Μαθήματα/7/WEB/project/www/Next-Node-Express-PostgreSQL/Client/lib/auth.js"],"names":["verify","checkCreds","username","password","fetch","res","match","creds"],"mappings":";;AAAA,SAAQA,MAAR,QAAqB,eAArB;AAEA,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,iBAA0BC,QAA1B,EAAoCC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,KAAK,uCAAgCF,QAAhC,EADpB;;AAAA;AACGG,YAAAA,GADH;AAEGC,YAAAA,KAFH,GAEWN,MAAM,CAACG,QAAD,EAAUE,GAAV,CAFjB;AAAA,6CAGIE,KAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {verify} from 'password-hash'\r\n\r\nexport async function checkCreds(username, password){\r\n    const res = await fetch(`http://localhost:5000/login/${username}`);\r\n    const match = verify(password,res)    \r\n    return creds;\r\n}"]},"metadata":{},"sourceType":"module"}